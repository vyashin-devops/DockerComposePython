name: Docker-Flask-Application-EC2

on:
  push:
    branches:
      - main
 
jobs:
  
  test_docker_compose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
        run: docker-compose build
      - name: Up the stack  
        run: docker-compose up -d
      - name: Test
        run: curl http://localhost:1234/
        # run: docker run --network container:webapp-frontend appropriate/curl -s --retry 10 --retry-connrefused http://localhost:5000/
 
  Remote_ssh_commands:
    runs-on: ubuntu-latest
    needs: []
    steps:
      - name: First executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
#         port: ${{ secrets.PORT }}
          script: docker rm -f $(docker ps -a -q) && docker rmi $(docker images -q)
          #      ^ docker kill $(docker ps -q) && 
        
      - name: Second executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        #continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
#         port: ${{ secrets.PORT }}
          script: docker run --name flaskindocker -d -p 5001:5001 yashinv/flaskindocker 
#   Build_and_push_to_Docker_client:
#     runs-on: ubuntu-latest
#     needs: [test_docker_compose]
#     steps:
    
#       - name: Check Out Repo 
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USER }}
#           password: ${{ secrets.DOCKER_TOKEN }}

#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           context: ./client/
#           file: ./client/Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKER_USER }}/docker_client

#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}
        
# #=============================================================================================================

#   Build_and_push_to_Docker_server:
#     runs-on: ubuntu-latest
#     needs: [Build_and_push_to_Docker_client]
#     steps:
    
#       - name: Check Out Repo 
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USER }}
#           password: ${{ secrets.DOCKER_TOKEN }}

#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           context: ./server/
#           file: ./server/Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKER_USER }}/docker_server:latest

#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}
